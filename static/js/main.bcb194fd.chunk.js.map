{"version":3,"sources":["Context.js","FComponents/Heading.js","FComponents/SearchBar.js","FComponents/ImagesLayout.js","FComponents/NotFound.js","FComponents/MyLoader.js","FComponents/ConnectionError.js","App.js","index.js"],"names":["state","ApiUrl","Defaultquery","client_id","applicationName","currunt_page","curruntQuery","per_page","imagesArr","rendering_initially","isLoading","querySuccess","reducer","action","type","data","results","network_error","total_pages","checkFetchedImages","actionType","response","dispatch","textInput","total","parseInt","Action","FETCH_IMAGES","RENDER_INITIALLY","RESULT_NOT_FOUND","SHOW_LOADER","NETWORK_ERROR","Heading","initialState","className","SearchBar","handleSubmit","a","inputText","fetch","concat","json","console","log","onSubmit","e","preventDefault","showLoaderUntilFetching","document","querySelector","value","ImageLayout","useEffect","fetchImages","map","element","index","href","links","html","target","src","urls","regular","alt","alt_description","NotFound","loadingStyle","css","MyLoader","size","ConnectionError","App","useReducer","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bcb194fd.chunk.js","sourcesContent":["\r\n// this is the reducer this is where all your action will be executed \r\nconst reducer = (state, action) => {\r\n switch(action.type) {\r\n   case \"FETCH_IMAGES\" :\r\n    return { \r\n      ...state, \r\n      imagesArr: action.data.results,\r\n      isLoading: false, \r\n      querySuccess: true, \r\n      curruntQuery: action.curruntQuery,\r\n      rendering_initially: false,\r\n      network_error: false,\r\n      total_pages: action.data.total_pages\r\n    }\r\n\r\n   case \"RENDER_INITIALLY\": \r\n    return {\r\n      ...state,\r\n       imagesArr: action.data.results,\r\n       isLoading: false,\r\n       querySuccess: true,\r\n       network_error: false,\r\n       total_pages: action.data.total_pages\r\n    }\r\n  \r\n    case \"RESULT_NOT_FOUND\":\r\n      return {\r\n        ...state,\r\n        querySuccess: false,\r\n        isLoading: false,\r\n        curruntQuery: action.curruntQuery,\r\n        network_error: false,\r\n        total_pages: 0\r\n      }\r\n \r\n    case \"SHOW_LOADER\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        querySuccess: false,\r\n        network_error: false,\r\n        total_pages: 0\r\n        }\r\n\r\n    case \"NETWORK_ERROR\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        querySuccess: false,\r\n        network_error: true,\r\n        total_pages: 0\r\n      }\r\n      \r\n    default :\r\n       return state;  \r\n }\r\n}\r\n\r\n// checks fetched images\r\nfunction checkFetchedImages(actionType, response, dispatch, textInput = \"\") {\r\n\r\n  if(response.total > 0) {\r\n    dispatch({type: actionType, data: response, curruntQuery: textInput});\r\n  } else if(parseInt(response.total) === 0) {\r\n    dispatch({type: \"RESULT_NOT_FOUND\", curruntQuery: textInput});\r\n  } \r\n}\r\n\r\nconst Action = {\r\n\r\n FETCH_IMAGES: 'FETCH_IMAGES',\r\n RENDER_INITIALLY: 'RENDER_INITIALLY',\r\n RESULT_NOT_FOUND: 'RESULT_NOT_FOUND',\r\n SHOW_LOADER: 'SHOW_LOADER',\r\n NETWORK_ERROR: 'NETWORK_ERROR'\r\n}\r\n\r\nconst state = {\r\n  ApiUrl: `https://api.unsplash.com/search/`,\r\n  Defaultquery: `\"london\"`,\r\n  client_id: `&client_id=icX6L7nX2IPHJTBm-wvIUvSUbBKi386AKavHF_MNYto`,\r\n  applicationName: 'Unsplash-Image-Getter',\r\n  currunt_page: 1,\r\n  curruntQuery: '',\r\n  per_page: 25,\r\n  imagesArr: [],\r\n  rendering_initially: true,\r\n  isLoading: true,\r\n  querySuccess: true, \r\n  reducer,\r\n  checkFetchedImages, \r\n  Action,\r\n  network_error: false\r\n}\r\n\r\n\r\nexport {state};\r\n\r\n","\r\nconst Heading = ({initialState}) => {\r\n\r\n  const { applicationName } = initialState;\r\n  return (\r\n    <>\r\n    <div className=\"headingContainer\">\r\n      <h2 className=\"heading\"> {applicationName} </h2>         \r\n    </div>\r\n    </>\r\n  );\r\n} \r\n\r\nexport default Heading;","\r\nexport default function SearchBar({initialState, dispatch}) {\r\n\r\n  const { \r\n     checkFetchedImages,\r\n     Action, \r\n     ApiUrl, \r\n     client_id,\r\n     currunt_page,\r\n     per_page } = initialState;\r\n\r\n  function showLoaderUntilFetching(inputText = \"\") {\r\n    dispatch({type: Action.SHOW_LOADER});\r\n    handleSubmit(inputText);\r\n  }\r\n\r\n  async function handleSubmit(inputText = null) {\r\n\r\n    try {\r\n      let response = await fetch(ApiUrl.concat('photos?query=').concat(inputText.concat(`&page=${currunt_page}&per_page=${per_page}`).concat(client_id)));\r\n      response = await response.json();\r\n      checkFetchedImages(Action.FETCH_IMAGES, response, dispatch, inputText);\r\n    } catch(e) {\r\n      console.log(e);\r\n       dispatch({type: Action.NETWORK_ERROR});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n <form action=\"#\" className=\"searchForm\" onSubmit={(e) => {\r\n    e.preventDefault();\r\n    \r\n    const inputText = document.querySelector('.searchText').value;\r\n    showLoaderUntilFetching(inputText);\r\n  }}> \r\n   <input type=\"text\" className=\"searchText\" />\r\n   <input type=\"submit\" className =\"submitButton\" value=\"Search\" />   \r\n </form> \r\n    </>\r\n  )\r\n}\r\n","import { useEffect } from 'react';\r\n\r\nconst ImageLayout = ({dispatch, initialState}) => {\r\n\r\nconst { \r\n  checkFetchedImages, \r\n  rendering_initially, \r\n  Action, ApiUrl, \r\n  client_id, \r\n  imagesArr,\r\n  Defaultquery,\r\n  per_page,\r\n  currunt_page } = initialState;\r\n\r\n\r\n// fetches images initially when component renders\r\nuseEffect(() => {\r\n\r\n  async function fetchImages() {\r\n    if(rendering_initially) {\r\n\r\n      try {\r\n        let response = await fetch(ApiUrl.concat('photos?query=').concat(Defaultquery.concat(`&page=${currunt_page}&per_page=${per_page}`).concat(client_id)));\r\n        response = await response.json();\r\n        checkFetchedImages(Action.RENDER_INITIALLY, response, dispatch);  \r\n      } catch(e) {\r\n\r\n        console.log(e);\r\n        dispatch({type: Action.NETWORK_ERROR})\r\n      }\r\n    }\r\n  }\r\n\r\nfetchImages();\r\n\r\n}, []);\r\n\r\n\r\n\r\nreturn (\r\n  <>\r\n   <div className=\"ImagesContainer\">\r\n    {imagesArr.map((element, index) => {\r\n      return(\r\n        <> \r\n        <a key={index} href={element.links.html} target=\"_blank\">\r\n        <img src={element.urls.regular} alt={element.alt_description}/>\r\n        </a>\r\n        </>\r\n      ); \r\n    })}\r\n  </div>\r\n </> \r\n );\r\n}\r\n\r\nexport default ImageLayout;","import { MdSentimentVeryDissatisfied } from 'react-icons/md';\r\n\r\nconst NotFound = ({initialState}) => {\r\n\r\n  const {curruntQuery} = initialState;\r\n\r\n  return(\r\n    <>\r\n    <MdSentimentVeryDissatisfied className=\"notFoundIcon\" />\r\n    <h1 className=\"notFoundErrorMassage\">sorry can't found anyhting with\r\n     <span className=\"WrongQuery\"> \"{curruntQuery}\" </span> </h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import { BounceLoader } from 'react-spinners';\r\nimport { css } from '@emotion/core';\r\n\r\n// loading style\r\nconst loadingStyle = css`\r\ndisplay: block;\r\nmargin: auto;\r\nmargin-top: 9rem;\r\n`\r\n\r\nconst MyLoader = () => {\r\n\r\n  return (\r\n    <BounceLoader size={150} css={loadingStyle}/>\r\n  )\r\n}\r\n\r\nexport default MyLoader;","import { RiSignalWifiErrorFill } from 'react-icons/ri';\r\n\r\nconst ConnectionError = () => {\r\n\r\n  return (\r\n    <> \r\n      <RiSignalWifiErrorFill className=\"connecitonErrorIcon\" />    \r\n      <h1 className=\"connectionErrorMassage\"> Your Internet Connection Sucks </h1>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConnectionError;","import React, { useReducer } from 'react';\r\nimport { state } from './Context';\r\nimport Heading from './FComponents/Heading';\r\nimport SearchBar from './FComponents/SearchBar';\r\nimport ImageLayout from './FComponents/ImagesLayout';\r\nimport NotFound from './FComponents/NotFound';\r\nimport MyLoader from './FComponents/MyLoader';\r\nimport ConnectionError from './FComponents/ConnectionError';\r\n// importing css \r\nimport './MyCss/myStyle.scss';\r\n\r\n\r\n\r\nconst App = () => {\r\n\r\nconst { reducer } = state;\r\nconst [initialState, dispatch] = useReducer(reducer, state); \r\nconst {isLoading, querySuccess, network_error } = initialState;\r\n\r\n  return(\r\n      <> \r\n        <Heading initialState={initialState}/>\r\n        <SearchBar initialState={initialState} dispatch={dispatch} />\r\n        {isLoading && <MyLoader/> }  \r\n        {querySuccess && <ImageLayout initialState={initialState} dispatch={dispatch} />}        \r\n        {!querySuccess && !isLoading && !network_error && <NotFound initialState={initialState}/> }\r\n        {network_error && <ConnectionError />}\r\n      </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  <App />\r\n</React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}